#cloud-config
# vim: syntax=yaml
#

# Set your hostname here, the manage_etc_hosts will update the hosts file entries as well
hostname: twccontroller
manage_etc_hosts: true

# You could modify this for your own user information
users:
  - name: tesla
    gecos: "Tesla Wall Connector Controller"
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: users,docker,video,input
    plain_text_passwd: tesla
    lock_passwd: false
    ssh_pwauth: true
    chpasswd: { expire: false }

# # Set the locale of the system
# locale: "en_US.UTF-8"

# # Set the timezone
# # Value of 'timezone' must exist in /usr/share/zoneinfo
timezone: "Australia/Sydney"

# # Update apt packages on first boot
# package_update: true
# package_upgrade: true
# package_reboot_if_required: true
package_upgrade: false

# # Install any additional apt packages you need here
# packages:
#  - ntp

# # WiFi connect to HotSpot
# # - use `wpa_passphrase SSID PASSWORD` to encrypt the psk
write_files:
  - content: |
      allow-hotplug wlan0
      iface wlan0 inet dhcp
      wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
      iface default inet dhcp
    path: /etc/network/interfaces.d/wlan0
  - content: |
      country=au
      ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
      update_config=1
      network={
        ssid="YOUR_WIFI_SSID"
        psk="YOUR_WIFI_PSK_PASSWORD"
        proto=RSN
        key_mgmt=WPA-PSK
        pairwise=CCMP
        auth_alg=OPEN
      }
    path: /etc/wpa_supplicant/wpa_supplicant.conf
  - content: |
      #!/bin/bash
      sudo -i -u tesla bash << "EOF"
      function twcstartup {
      if [ ! -d /home/tesla/twc-controller ]
      then
          DOCKER_RUN=false
          until "$DOCKER_RUN" == "true"
          do
              if [ "$(systemctl is-active docker)" = "active" ]; then
              DOCKER_RUN=true
              echo "Docker is running, continuing..."
              GIT_SSL_NO_VERIFY=true git clone https://github.com/shreddedbacon/twc-controller.git /home/tesla/twc-controller
              fi
          done
      fi
      DOCKER_RUN=false
      until "$DOCKER_RUN" == "true"
      do
          if [ "$(systemctl is-active docker)" = "active" ]; then
              DOCKER_RUN=true
              echo "Docker is running, continuing..."
              cd /home/tesla/twc-controller
              bash startup.sh
              #bash startup.sh fakepowerwall
          fi
      done
      }
      exitcount=0
      while true
      do
        if [ $exitcount -eq 30 ]; then
            echo "Failed to start up the TWC controllers after 30 attempts"
            break
        fi
        twcstartup
        if [ $? -eq 0 ]; then
            break
        fi
        ((exitcount=exitcount+1))
        sleep 5
      done
      EOF
    path: /twccontroller
    permissions: "0755"

# These commands will be ran once on first boot only
runcmd:
  # Pickup the hostname changes
  - "systemctl restart avahi-daemon"
  # Activate WiFi interface
  - "ifup wlan0"
  # setup the startup/install scripts
  - "/twccontroller"
